name: Development CI/CD Pipeline

on:
  push:
    branches: 
    - main
    - release/*
  pull_request:
    branches: 
    - main

jobs:
  build:
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]


    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    - name: Install Dependencies
      run: |
        cd backend && npm install
        cd ../frontend && npm install
        
    - name: Run Backend Tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: development
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test
      env:
        NODE_ENV: development
        REACT_APP_API_URL: ${{ secrets.RENDER_API_URL }}
        
    - name: Run Linting
      run: |
        cd backend && npm run lint
        cd ../frontend && npm run lint

    - name: Build Frontend (Development)
      if: github.ref == 'refs/heads/dev'
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: development
        REACT_APP_API_URL: ${{ secrets.RENDER_API_URL }}

    - name: Build Frontend (Staging)
      if: github.ref == 'refs/heads/staging'
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: staging
        REACT_APP_API_URL: ${{ secrets.STAGING_RENDER_API_URL }}

    - name: Deploy to Vercel (Development)
      if: github.ref == 'refs/heads/dev'
      run: |
        npx vercel --token ${VERCEL_TOKEN} --confirm --no-clipboard
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    - name: Deploy to Vercel (Staging)
      if: github.ref == 'refs/heads/staging'
      run: |
        npx vercel --token ${VERCEL_TOKEN} --confirm --no-clipboard --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
